Project: StoreMate
License: Apache License 2.0

1.1.2 (xx-Aug-2014)

- Add support for secondary node-state-stores, needed (or at least useful)
  for storing information about remote cluster nodes.

1.1.1 (11-Apr-2014)

- Add option to enable BDB-JE "key prefixing", defaulting to true (was not enabled
  earlier)
- Added `StorableKeyComparator`

1.1.0 (09-Apr-2014)

#7 Handle failure to create `MemBuffer` (by `StorableStoreImpl`) more gracefully (reported via callback)
- Upgrade Java leveldb dependency to 0.7, to resolve Guava issues with ClusterMate
- Update slf4j dep to 1.7.6, logback to 1.1.2 and Joda dep to 2.2

1.0.2 (04-Mar-2014)

- Relaxed checks by BufferRecycler to allow for concurrent access (from single
  thread): needed by depending packages for some operations.

1.0.1 (09-Feb-2014)

- Fixed serious problems with syncing, which could cause problems with concurrent
   updates (requests to multiple peers for same entries):
  o Leave orphan files for unneeded copies
  o Delete backing file for original copy

1.0.0 (05-Feb-2014)

No changes since 0.9.25 -- the very first official version!

0.9.25 (30-Jan-2013)

- Make BackendStats bit more reusable
- Fix a bug in ByteAggregator.readUpTo()
- Fix a minor bug in verification of acceptable compression
- Add `StorableKey.byteAt()`
- Change node-state and last-access stores to be pluggable; add LevelDB-backed
  store implementations
- Fixed a minor problem with update of last-modified for soft-delete which affected
  LevelDB on cluster tests
- Add method `withError()` in "ByteBufferCallback" to allow graceful handling of
  allocation errors.
- Improve reuse/release handling of `ByteAggregator`
- Improvements to ByteAggregator, for improved interoperability
- Make `IncrementalHasher32` implement `java.util.zip.Checksum` for convenience

0.9.20 (03-Oct-2013)

- Improve iteration for BDB-JE backend, so that cursor is moved to next
  entry before calling process method with current entry (hoped to help
  with transactions, but does not seem to solve issues)
- Downgrade to BDB-JE 5.0.73 after finding a severe bug that crashes
  system on startup.
- Add `StoreBackend.getStorageDirectory()` to allow for exposing more
  diagnostics/stats.
- Added new StoreException.DB type for passing more granular failure info from store
 (specifically handle BDB-JE SecondaryIntegrityException now, more later)
- Improve handling of backend statistics; was incorrectly defaulting to slow stats

0.9.15 (09-Sep-2013)

#6: Buffer content being written from request into memory buffer, before disk write operation
- Try to improve robustness of BDB-JE error handling wrt Thread.interrupt()
  (occurred during testing)
- Add metadata (time taken, only-fast-stats) for BackendStats exposed
- Fix `OperationDiagnostics`, was using from nano-second base
- Add 'bytes' argument to OperationDiagnostics, file operations; separate out read/write
  operations for diagnostics

0.9.10 (27-Jun-2013)

#3: Add LevelDB/Java - based backend
#4: Add option to enable 'deferred writes' for BDB backend (NOTE: not used, up
  to implementing stores)
- Improve logging of timing information by moving OperationDiagnostics in.
- Implement off-heap buffering for PUT content (to reduce congestion for file writes)
- Add low-level support for throttling (with `StoreOperationThrottler`),
  to be used by higher-level stores.
- Improve handling of backend stats a bit; expose env-stats for BDB-JE
- Add 'StoreBackend.getEntryStatistics()', 'getIndexStatistics()' for bit
  more access to statistics backend exposes (if any)
- Allow configuring of lock timeout: change default from 5 to 7 seconds, due
  to couple of observed cases of hitting the limit
- Improve handling of BDB exceptions; now get converted to StoreExceptions for
  easier handling (wrt alternate backends)

0.9.5 (14-Mar-2013)

* Optimized LZF/GZIP handling via Compressors
* Allow overriding default BDB-JE lockTable count; partitioned lock count
 (for general store)
* Add support for conditionally overwriting entries; needed to support "undelete"
 (and possibly for other things in future)
* Fixed an issue with BDB backend not handling possible entry offsets
* Added find-methods in StorableKey
* Fixed problems with hash code handling for empty content (0 must be masked)

0.8.7 (16-Dec-2012):

First version with release notes
Baseline version, no earlier notes -- first version (0.5) from August 2012.
